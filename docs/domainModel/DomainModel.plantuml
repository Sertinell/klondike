@startuml Domain Model

together {
    class Foundation
    class Waste
    class Deck
    class Tableau
}

together {
    class SelectedCard
    class Destination
}

Game *-left-> Player
Game *--> Tableau
Game *--> "4" Foundation
Game *--> Deck
Game *--> Waste
Game *-right-> Movement

Movement *--> SelectedCard
Movement *--> Destination

SelectedCard *--> Source
SelectedCard *--> Card

Destination *--> Target
Destination *--> Card

together {
    interface Source {
    }
    interface Target {
    }
}




Foundation -up-|> Source
Pile -up-|> Source
Waste -up-|> Source

Foundation -up-|> Target
Pile -up-|> Target


Foundation *--> "0..13" Card
Tableau *--> "7" Pile
Pile *-->"*" Card
Deck *-->"*" Card
Waste *-->"*" Card

Card *--> Number
Card *-right-> Suit
Card *-left-> State

enum State {
    FaceUp
    FaceDown
}


enum Number{
    1
    2
    ...
    10
    J
    Q
    K
}

enum Color {
    Black
    Red   
}

Suit *--> Color

class Spades{
    Color = Black;
}

class Clubs{
    Color = Black;
}

class Hearts{
    Color = Red;
}

class Diamonds{
    Color = Red;
}

Suit <|-- Spades
Suit <|-- Hearts
Suit <|-- Diamonds
Suit <|-- Clubs

class SelectedCard {
    +isValid()
}

class Destination {
    +isValid()
}

@enduml

