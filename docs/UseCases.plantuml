@startuml Player Flips Card from Stock
state isEmpty <<choice>> 
state isWasteEmpty <<choice>>
hide empty description 
state "OpenGame" as 0
state " " as 1
state " " as 2
state " " as 3
state " " as 4
state " " as 5

0 -down-> 1: Player selects deck
1 -down-> isEmpty: Is deck empty?
isEmpty -down-> 2
isEmpty --> 4: yes
2 --> 3: System move 3 cards from deck to waste
4 --> isWasteEmpty: Is waste empty?
isWasteEmpty -down-> OpenGame : yes
isWasteEmpty -down-> 5 
5-->2 : Turn down waste
3-down-> OpenGame : Show Game
@enduml


@enduml
@startuml States Player Moves Card From Waste to Tableau
hide empty description
state "OpenGame" as 0
0 -down-> _ : Player Selects Card in Waste
state choice <<choice>>
_ --> choice : Is waste empty
choice --> 0 : Yes
choice --> .:  No
. --> Destination : Player selects destination
state choice1 <<choice>>
Destination --> choice1 : Is valid destination?
choice1 --> DisplayGame : Yes
choice1 --> . : No
DisplayGame --> OpenGame
@enduml

@startuml Player Moves Card from Tableau to Foundation
state choice1 <<choice>> 
state choice2 <<choice>>
state choice3 <<choice>> 

hide empty description 
state "Player select card to Move from a Tableau" as 1
state "Player select a Foundation as destination" as 2
state "Board is updated" as 3
state "OpenGame" as 0
0 -down-> 1

1 -down-> choice1
choice1 -down-> 2
choice1 -right-> ShowError : Selected card cannot be move
2-down-> choice2
choice2 -right-> ShowError : Card.Color != Foundation.Color
choice2 -down-> 3
3-down-> choice3
choice3 -right-> Win: All foundations complete
choice3 --> OpenGame: Foundation not complete
ShowError -up-> 0
@enduml

@startuml Request Random Movement
hide empty description
state " " as S1
state " " as S2
state " " as S3
state " " as S4
state " " as S5

OpenGame -down-> S1 : Player selects Hint
S1 --> S2 : Show Game after computed movement
state choice <<choice>>
S2 --> choice : Is game finished?
choice --> S3 : yes
choice -up-> OpenGame: no
state choice2 <<choice>>
S3 --> choice2 : Has won?
choice2 --> S4 : No
S4 --> GameClosed : System show Lost
choice2 --> S5 : Yes
S5 --> GameClosed : System show Win
@enduml

@startuml Player Request Help Summary
hide empty description 
state "Player asks for the help summary" as 1
state "Help summary is shown" as 2
OpenGame -down-> 1
1 --> 2
2-up-> OpenGame
@enduml

@startuml States Player Exits Game
hide empty description
OpenGame --> S1 : Player Selects Exit
S1 --> [*] : System close application
@enduml

